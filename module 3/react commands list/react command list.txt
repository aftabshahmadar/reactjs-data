1 :- npx create-react-app my-app => Creates a new React project named my-app with a pre-configured development environment.


2 :- npm start => Starts the development server and opens the app in your default web browser at http://localhost:3000.


3 :- npm run build => Creates an optimized production build of your app, which can be deployed to a web server.


4 :- npm test => Runs the test suite for your React application in watch mode.


5 :- npm run eject => Removes the abstraction provided by Create React App and exposes the configuration files, 
     giving you full control over the build configuration. (Use with caution!)


6 :- npm install => Installs all the dependencies listed in package.json. This command is often run after cloning a project repository.


7 :- npm install [package-name] => Installs a specific npm package and adds it to your package.json file.


8 :- npm uninstall [package-name] => Removes a specific npm package from your project and updates your package.json.


9 :- npm install react-router-dom =>  Installs React Router, a library for routing in React applications.


10 :- serve -s build => Serves the production build locally. Requires the serve package, which can be installed using npm install -g serve.


11 :- npm ls react => Lists the installed version of React in your project.


12 :- npm run lint => Runs the ESLint tool to check your code for syntax or style errors, if ESLint is set up in your project.


13 :- npm install eslint --save-dev => Installs ESLint as a development dependency, allowing you to lint your JavaScript code for errors and style issues.


14 :- npm install react@latest react-dom@latest => Updates React and React DOM to the latest version.


15 :- npm install redux react-redux =>  Installs Redux for state management and React-Redux for integrating Redux with React.
